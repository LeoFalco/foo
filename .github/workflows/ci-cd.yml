name: CI and CD

on: 
  push:
     branches:
      - master
  pull_request:
     branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: hmarr/debug-action@master
    
    - name: Checkout
      uses: actions/checkout@master      

    - name: Setup node
      uses: actions/setup-node@master
      with:
        registry-url: 'https://npm.pkg.github.com'
        NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

    - name: Restore dependencies cache 
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-


    - name: Install dependencies
      run: npx lerna bootstrap

    - name: Tests
      run: npx lerna run test
   
    - name: Git config
      if: github.ref == 'refs/heads/master'
      run: |
        git config --global user.name 'gh-actions'
        git config --global user.email 'gh-actions@noreply.github.com'
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        git fetch --tags
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    

    - run: echo $GH_PACKAGES_TOKEN
      env: 
        GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}

    - name: Detect updated packages
      run: npx lerna updated

    - name: Publish to gh packages
      run: npx lerna publish
      env:
        GH_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }} # lerna uses this env to auth to commit
        NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}